# ------------------------------------------------------------------------------
# Tmux config
# ------------------------------------------------------------------------------

set -g base-index 1                                     # Base index of 1
set -g detach-on-destroy off                            # Don't exit from Tmux when closing a session
set -g history-limit 100000                             # Big history
set -g mouse on                                         # Enable mouse
set -g renumber-windows on                              # Renumber all windows when any window is closed
set -g set-clipboard on                                 # use system clipboard
set-option -g allow-rename off                          # Don't rename windows automatically
set-option -sg escape-time 10                           # Fast escape time
set-option -g focus-events on                           # Use focus events for autoread in Neovim

set-hook -g after-new-window 'command-prompt "rename-window '%%'"' # Prompt to rename window right after it's created

# Edit config and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf \"█▓░ ~/.tmux.conf reloaded.\"'"

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message "█▓░ ~/.tmux.conf reloaded."

# Prefix
unbind C-b
set-option -g prefix C-a
bind -r C-a send-prefix

bind -n C-k clear-history

bind '%' split-window -c '#{pane_current_path}' -h
bind '"' split-window -c '#{pane_current_path}'

# Resize
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# keep current working directory while creating new pane
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Vim style copy paste mode
# unbind [
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind-key -Tcopy-mode-vi 'v' send -X begin-selection
# bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# To copy, left click and drag to highlight text in yellow,
# once you release left click, yellow text willl disappear and will automatically be available in clipboard
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
# bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down

# Update default binding of 'Enter' to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd2Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Close windows and panes without confirmation
bind-key x kill-pane
bind-key & kill-window

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

set -g status-interval 2      # update status every 2 seconds
set -g status-left-length 200 # increase status line length
set -g status-right-length 200 # increase status line length
# set -g status-right ''        # empty

set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'
set -g status-style 'bg=default'
set -g window-status-current-format '#[fg=brightred] #W'
set -g window-status-format '#[fg=gray] #W'
set -g mode-style bg=default,fg=magenta

set -g status-left '#[fg=yellow,bold]#S #[fg=white,nobold]'
# set -ga status-left "#(gitmux -cfg $HOME/.dotfiles/tmux/gitmux.conf)"
set -g status-right '#(gitmux "#{pane_current_path}")'

set-option -g message-style 'fg=brightred,bg=black'

# Use true colors
set -g default-terminal "screen-256color"
set -sa terminal-features ",xterm-256color:RGB"

#### SCRIPTS & PLUGINS

# Custom scripts
bind-key -r f run-shell "~/.dotfiles/bin/t"
bind-key -r i run-shell "tmux neww tmux-cht"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Keep at bottom.
# To install: PREFIX+SHIFT+i
run '~/.dotfiles/tmux/plugins/tpm'
